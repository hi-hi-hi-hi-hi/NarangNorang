<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.config.PostMapper">

	<!-- <select id="selectAllByCategory" parameterType="hashmap" resultType="PostDTO">
		<![CDATA[
			select rownum,
					id,
					member_id as memberId,
					member_name as memberName,
					title,
					content,
					datetime,
					replies,
					likes,
					views
			from post
			where category=#{category} AND likes >= #{likes}
			order by id desc
			OFFSET (#{pageDto.currentPage}-1)*#{pageDto.limit} ROWS FETCH FIRST #{pageDto.limit} ROWS ONLY
		]]>
	</select>
	-->
	
	<select id="selectAllByCategory" parameterType="hashmap" resultType="PostDTO">
	<![CDATA[
		select rownum,
				id,
				member_id as memberId,
				member_name as memberName,
				title,
				content,
				datetime,
				replies,
				likes,
				views
		from post
		where category=#{category} AND likes >= #{likes}
		order by id desc
		OFFSET (#{pageDto.currentPage}-1)*#{pageDto.limit} ROWS FETCH FIRST #{pageDto.limit} ROWS ONLY
	]]>
	</select>
	
	<select id="totalRecord" parameterType="hashmap" resultType="PageDTO">
		<![CDATA[
			select count(*) as totalRows
			from post
			where category = #{category} AND likes >= #{likes}
		]]>
	</select>

	
	<select id="selectById" resultType="PostDTO" parameterType="int">
		<![CDATA[
			select id,
					category,
					content, 
					title, 
					member_id as memberId,
					member_name as memberName, 
					views,
					likes, 
					datetime, 
					replies
			from post 
			where id = #{id}
		]]>
	</select>
	
	<select id="selectAllReply" resultType="ReplyDTO" parameterType="int">
		<![CDATA[
			select id,
					member_id as memberId,
					member_name as memberName,
					post_id,
					content,
					datetime,
					likes
			from reply
			where post_id = #{postId}
		]]>
	</select>
	
	<select id="selectByLikes" resultType="PostDTO" parameterType="hashmap">
		<![CDATA[
			select id,
					member_name as memberName,
					title,
					datetime,
					replies,
					likes,
					views
			from post
			where likes >= #{likes} AND (category = #{category})
			order by id desc
		]]>
	</select>
	
	<select id="search" resultType="PostDTO" parameterType="hashmap">
		<![CDATA[
			select id,
					member_name as memberName,
					title,
					datetime,
					replies,
					likes,
					views
			from post
			where (${searchCol} like '%'||#{keyword}||'%') AND (category = #{category})
			order by id desc
			OFFSET (#{pageDto.currentPage}-1)*#{pageDto.limit} ROWS FETCH FIRST #{pageDto.limit} ROWS ONLY
		]]>
	</select>
	
	<select id="searchRecord" parameterType="hashmap" resultType="PageDTO">
		<![CDATA[
			select count(*) as totalRows
			from post
			where (${searchCol} like '%'||#{keyword}||'%') AND (category = #{category})
		]]>
	</select>

	
	<update id="updateViews" parameterType="int">
		<![CDATA[
			update post
			set views =  views + 1
			where id = #{id}
		]]>
	</update>
	
	<insert id="insert" parameterType="PostDTO">
		<![CDATA[
			insert into post ( id, member_id, member_name, category, title, content )
			values ( seq_post.nextval, #{memberId}, #{memberName}, #{category}, #{title}, #{content} )
		]]>
	</insert>
	
	<update id="update" parameterType="PostDTO">
		<![CDATA[
			update post 
			set title=#{title}, content=#{content}
			where id = #{id}
		]]>
	</update>
	
	<delete id="delete" parameterType="int">
		<![CDATA[
			delete from post
			where id = #{id}
		]]>
	</delete>
	
	<insert id="insertReply" parameterType="ReplyDTO">
		<![CDATA[
			insert into reply ( id, member_id, member_name, post_id, content )
			values ( seq_reply.nextval, #{memberId}, #{memberName}, #{postId}, #{content} )
		]]>
	</insert>
	
	<delete id="deleteReply" parameterType="int">
		<![CDATA[
			delete from reply
			where id = #{id}
		]]>
	</delete>
	
	<update id="updateReplyContent" parameterType="ReplyDTO">
		<![CDATA[
			update reply
			set content = #{content}
			where id = #{id}
		]]>
	</update>

	
	<update id="updateReplies" parameterType="hashmap">
		<![CDATA[
			update post
			set replies =  replies + #{amount}
			where id = #{postId}
		]]>
	</update>
	
	<insert id="insertPostLiker" parameterType="PostLikerDTO">
		<![CDATA[
			insert into post_liker ( id, member_id, post_id )
			values ( seq_post_liker.nextval, #{memberId}, #{postId} )
		]]>
	</insert>
	
	<update id="plusPostLike" parameterType="int">
		<![CDATA[
			update post
			set likes = likes + 1
			where id = #{id}
		]]>
	</update>
	
	<update id="minusPostLike" parameterType="int">
		<![CDATA[
			update post
			set likes = likes - 1
			where id = #{id}
		]]>
	</update>
	
	<select id="selectPostLiker" parameterType="PostLikerDTO" resultType="PostLikerDTO">
		<![CDATA[
			select *
			from post_liker
			where post_id=#{postId} AND member_id=#{memberId}
		]]>
	</select>
	
	<delete id="deletePostLiker" parameterType="int">
		<![CDATA[
			delete from post_liker
			where id = #{id}
		]]>
	</delete>

</mapper>